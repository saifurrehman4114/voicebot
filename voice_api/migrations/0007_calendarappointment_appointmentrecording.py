# Generated by Django 4.2.7 on 2025-10-22 06:36

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('voice_api', '0006_chatconversation_conversation_summary_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarAppointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_email', models.CharField(help_text="User's email address", max_length=255)),
                ('title', models.CharField(help_text='Appointment title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Appointment description', null=True)),
                ('start_time', models.DateTimeField(help_text='Appointment start date and time')),
                ('end_time', models.DateTimeField(help_text='Appointment end date and time')),
                ('duration_minutes', models.IntegerField(help_text='Duration in minutes')),
                ('auto_record', models.BooleanField(default=True, help_text='Automatically start recording at appointment time')),
                ('reminder_minutes_before', models.IntegerField(default=5, help_text='Send reminder N minutes before appointment')),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('reminder_sent', 'Reminder Sent'), ('recording', 'Recording in Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('color', models.CharField(default='#8B5CF6', help_text='Hex color code for calendar display', max_length=7)),
                ('location', models.CharField(blank=True, help_text='Physical or virtual location', max_length=500, null=True)),
                ('meeting_url', models.URLField(blank=True, help_text='Online meeting link', null=True)),
                ('attendees', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, default=list, help_text='Email addresses of attendees', size=None)),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'calendar_appointments',
                'ordering': ['start_time'],
                'indexes': [models.Index(fields=['user_email', 'start_time'], name='calendar_ap_user_em_15279c_idx'), models.Index(fields=['status'], name='calendar_ap_status_406f60_idx'), models.Index(fields=['start_time', 'end_time'], name='calendar_ap_start_t_c1d56c_idx')],
            },
        ),
        migrations.CreateModel(
            name='AppointmentRecording',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audio_file', models.CharField(blank=True, help_text='Path to audio file', max_length=500, null=True)),
                ('file_size', models.IntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('file_format', models.CharField(blank=True, max_length=10, null=True)),
                ('transcribed_text', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, help_text='AI-generated summary of the recording', null=True)),
                ('intent', models.CharField(blank=True, help_text='Main intent/purpose of the meeting', max_length=200, null=True)),
                ('intent_confidence', models.FloatField(blank=True, null=True)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Important keywords from the meeting', size=None)),
                ('entities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Named entities mentioned', size=None)),
                ('domain_terms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Technical or domain-specific terms', size=None)),
                ('action_items', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, help_text='Action items and tasks identified', size=None)),
                ('topics', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Topics discussed in the meeting', size=None)),
                ('recording_status', models.CharField(choices=[('pending', 'Pending'), ('recording', 'Recording'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('recording_started_at', models.DateTimeField(blank=True, null=True)),
                ('recording_ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='voice_api.calendarappointment')),
            ],
            options={
                'db_table': 'appointment_recordings',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['appointment', '-created_at'], name='appointment_appoint_accb69_idx'), models.Index(fields=['recording_status'], name='appointment_recordi_f29305_idx')],
            },
        ),
    ]
